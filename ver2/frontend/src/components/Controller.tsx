import React, { useState } from "react";
import Title from "./Title";
import RecordMessage from "./RecordMessage";

function Controller() {
  const [isLoading, setIsLoading] = useState(false);
  const [messages, setMessages] = useState<any[]>([]);

  // Blobs are the way that ReactMediaController stores audio files
  // they can be shown by <audio></audio> as a playback gui
  // Any audio generated by the backend must be converted to a Blob in the frontend

  // converts a blob into a URL so that the backend can process the audio recording
  const createBlobURL = (data: any) => {
    const blob = new Blob([data], { type: "audio/mpeg" });
    const url = window.URL.createObjectURL(blob);
    return url;
  };

  const handleStop = async (blobURL: string) => {
    setIsLoading(true);

    // Append recorded messages to messages
    const myMessage = { sender: "me", blobURL };
    const messagesArr = [...messages, myMessage];

    // Convert blob url to blot object
    //      
    fetch(blobURL)
      .then((res) => res.blob())
      .then(async (blob) => {

        // Construct audio to send file
        const formData = new FormData();
        formData.append("file", blob, "myFile.wav")

      });

    setIsLoading(false);
  };

  return (
    <div className="h-screen overflow-y-hidden">
      <Title setMessages={setMessages}></Title>
      <div className="flex flex-col justify-between h-full overflow-y-scroll pb-96">
        {/* Recorder */}
        <div className="fixed bottom-0 w-full border-t text-center py-6 bg-gradient-to-r from-sky-500 to-green-500">
          <div className="flex justify-center items-center w-full">
            <RecordMessage handleStop={handleStop} />
          </div>
        </div>
      </div>
    </div>
  );
}

export default Controller;
